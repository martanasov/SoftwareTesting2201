{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 CONCEPT What Makes a Good Commit? The better and more carefully you craft your commits, the more useful will version control be for you. Here are some guidelines about what makes a good commit: Related Changes: As stated before, a commit should only contain changes from a single topic. Don\'91t mix up contents from different topics in the same commit. This will make it harder to understand what happened. Completed Work: Never commit something that is half-done. If you need to save your current work temporarily in something like a clipboard, you can use Git\'91s \'93Stash\'94 feature (which will be discussed later in the book). But don\'91t eternalize it in a commit. Tested Work: Related to the point above, you shouldn\'91t commit code that you think is working. Test it well - and before you commit it to the repository. Short & Descriptive Messages: A good commit also needs a good message. See the paragraph above on how to \'93Write Good Commit Messages\'94 for more about this. Finally, you should make it a habit to commit often. This will automatically help you to keep your commits small and only include related changes.\
\
G\'fcnther, Tobias. Learn Version Control with Git: A step-by-step course for the complete beginner (pp. 35-36). Kindle Edition. }